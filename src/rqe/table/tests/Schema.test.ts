
import { it, expect } from '../../testing'
import { compileSchema } from '..'

it("compileSchema compiles a decl with a single get", () => {
    const schema = compileSchema({
        name: 'Test',
        attrs: ['a'],
        funcs: ['get(a)'],
    })

    expect(schema.attrs.length).toEqual(1);
    expect(schema.attrs[0].attr).toEqual('a');

    // todo: check for func
});

it("compileSchema compiles a decl with an autogenerated id", () => {
    const schema = compileSchema({
        name: 'Test',
        attrs: ['a auto'],
        funcs: ['get(a)'],
    })

    expect(schema.attrs[0].attr).toEqual('a');
    expect(schema.attrs[0].isAuto).toEqual(true);
    expect(schema.preInsert).toEqual([{t:'init_auto_attr',attr: 'a'}]);
});

it("compileSchema compiles a decl with an autogenerated id (updated syntax)", () => {
    const schema = compileSchema({
        name: 'Test',
        attrs: ['a(auto)'],
        funcs: ['get(a)'],
    })

    expect(schema.attrs[0].attr).toEqual('a');
    expect(schema.attrs[0].isAuto).toEqual(true);
    expect(schema.preInsert).toEqual([{t:'init_auto_attr',attr: 'a'}]);
});

